name: Test OPUS
run-name: Run Import and Application Tests triggered by ${{ github.ref_type }} ${{ github.ref_name }} or ${{ github.triggering_actor }}

on:
  workflow_dispatch:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
  schedule:
    - cron: "00 10 * * *"  # 2am PST, 3am PDT

jobs:
  test:
    name: Test OPUS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Because we can run multiple imports at the same time
        # under Linux, we can do our multi-Python-version test
        # there, and then just run a single version under
        # Windows to make sure the Windows code still works.
        # We can't efficiently run multiple Windows tests because
        # a GitHub Windows runner can only run a single version
        # of Python at a time and thus we don't get any
        # parallelism.
        include:
          - os: self-hosted-ubuntu
            python-version: "3.10"
          - os: self-hosted-ubuntu
            python-version: "3.11"
          - os: self-hosted-ubuntu
            python-version: "3.12"
          - os: self-hosted-windows
            python-version: "3.12"
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test with coverage
        run: |
          env
          echo
          scripts/automated_tests/opus_main_test.sh
        shell: bash

      - name: Upload coverage report to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./opus/application/coverage.xml
          verbose: true

      - name: Check coverage level
        run: |
          scripts/automated_tests/opus_check_coverage.sh
        shell: bash
